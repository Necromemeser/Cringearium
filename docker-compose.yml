version: '3.8'

services:
  # 1. Сервис PostgreSQL
  postgres:
    image: postgres:15
    container_name: myapp-postgres
    environment:
      POSTGRES_INITDB_SCHEMA: cringearium
      POSTGRES_INITDB_SCHEMA_GRANT: postgres
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./db-init:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - myapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  # 2. Spring Boot приложение
  app:
    build: .
    container_name: myapp-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILE}
    ports:
      - "8080:8080"
    networks:
      - myapp-network
    restart: unless-stopped
    env_file:
      - .env

volumes:
  postgres_data:

networks:
  myapp-network:
    driver: bridge